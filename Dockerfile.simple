# Use OpenJDK 8 base image
FROM openjdk:8-jdk-alpine

# Install basic tools
RUN apk add --no-cache curl wget unzip

# Install Apache Ant
ENV ANT_VERSION=1.10.12
RUN wget -O /tmp/apache-ant-${ANT_VERSION}-bin.tar.gz \
    https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz && \
    tar -xzf /tmp/apache-ant-${ANT_VERSION}-bin.tar.gz -C /opt && \
    mv /opt/apache-ant-${ANT_VERSION} /opt/ant && \
    rm /tmp/apache-ant-${ANT_VERSION}-bin.tar.gz

ENV ANT_HOME=/opt/ant
ENV PATH=$PATH:$ANT_HOME/bin

# Create a fake GlassFish directory structure for compilation
RUN mkdir -p /opt/glassfish/modules
ENV GLASSFISH_HOME=/opt/glassfish

# Set working directory
WORKDIR /app

# Copy source code into container
COPY . .

# Try to build the sources directly using javac first
RUN javac -version

# Check what build targets are available
RUN ant -p

# Try building with compile target instead of dist
RUN ant compile || echo "Compile failed"

# If dist requires server, try to build just the classes
RUN find src -name "*.java" | head -10 || echo "No Java sources found"

# List project structure
RUN ls -la

# List web directory
RUN ls -la web/ || echo "No web directory"

# Show what's in nbproject
RUN cat nbproject/project.properties | grep -E "(dist|war|compile)" | head -20
