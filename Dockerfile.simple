# Multi-stage build - build WAR file first
FROM adoptopenjdk/openjdk8:alpine-jre as builder

# Install build tools
RUN apk add --no-cache wget unzip

# Install Apache Ant
ENV ANT_VERSION=1.10.12
RUN wget -O /tmp/ant.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz && \
    tar -xzf /tmp/ant.tar.gz -C /opt && \
    mv /opt/apache-ant-${ANT_VERSION} /opt/ant && \
    rm /tmp/ant.tar.gz

ENV ANT_HOME=/opt/ant
ENV PATH=$PATH:$ANT_HOME/bin

WORKDIR /build
COPY . .

# Create a minimal directory structure for GlassFish libraries (only what we need for compilation)
RUN mkdir -p /opt/glassfish/modules && \
    wget -O /opt/glassfish/modules/javax.servlet-api.jar https://repo1.maven.org/maven2/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar

# Try to build without full GlassFish - just compile classes
RUN ant compile || true

# Manually package WAR file
RUN mkdir -p dist && \
    cd web && \
    jar -cvf ../dist/nestmartappFinal.war * -C ../build/web/WEB-INF/classes .

# Final stage - use payara (GlassFish alternative) image
FROM payara/micro:5.2022.3-jdk8

COPY --from=builder /build/dist/nestmartappFinal.war /opt/payara/deployments/

# Expose port
EXPOSE 8080

CMD ["java", "-jar", "/opt/payara/payara-micro.jar", "--deploy", "/opt/payara/deployments/nestmartappFinal.war"]
