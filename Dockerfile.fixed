# Use OpenJDK 8 base image
FROM openjdk:8-jdk-alpine

# Install necessary tools and Ant manually
RUN apk add --no-cache curl wget unzip

# Install Apache Ant manually
ENV ANT_VERSION=1.10.12
RUN wget -O /tmp/ant.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz && \
    tar -xzf /tmp/ant.tar.gz -C /opt && \
    mv /opt/apache-ant-${ANT_VERSION} /opt/ant && \
    rm /tmp/ant.tar.gz

ENV ANT_HOME=/opt/ant
ENV PATH=$PATH:$ANT_HOME/bin

# Install GlassFish first (needed for build) - try alternative download
ENV GLASSFISH_VERSION=5.1.0
RUN wget -O /tmp/glassfish.zip \
    "https://github.com/eclipse-ee4j/glassfish/releases/download/5.1.0/glassfish-5.1.0.zip" && \
    unzip /tmp/glassfish.zip -d /opt && \
    mv /opt/glassfish5 /opt/glassfish && \
    rm /tmp/glassfish.zip

ENV GLASSFISH_HOME=/opt/glassfish
ENV PATH=$PATH:$GLASSFISH_HOME/bin

# Set working directory
WORKDIR /app

# Copy source code into container
COPY . .

# Build WAR using Ant with GlassFish server home set
RUN ant -Dj2ee.server.home=/opt/glassfish dist

ENV AS_ADMIN_PASSWORD=""

# Copy properties/configs (if they exist)
RUN if [ -f web/WEB-INF/application.properties ]; then cp web/WEB-INF/application.properties /app/application.properties; fi
RUN if [ -f web/WEB-INF/jdbc.properties ]; then cp web/WEB-INF/jdbc.properties /app/jdbc.properties; fi

# Create password file
RUN echo "AS_ADMIN_PASSWORD=" > /tmp/glassfishpwd

# Deploy WAR to GlassFish
RUN $GLASSFISH_HOME/bin/asadmin start-domain && \
    $GLASSFISH_HOME/bin/asadmin --user admin --passwordfile /tmp/glassfishpwd deploy \
    --contextroot /nestmart /app/dist/nestmartappFinal.war && \
    $GLASSFISH_HOME/bin/asadmin stop-domain && \
    rm /tmp/glassfishpwd

# Expose ports
EXPOSE 8080 4848 8181

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
  CMD curl -f http://localhost:8080/nestmart/ || exit 1

# Start GlassFish
CMD ["asadmin", "start-domain", "--verbose"]
